version: "3"

services:
  authentication_server:
    container_name: NGO_AUTHENTICATION
    build: "./authentication"
    volumes:
      - ./authentication:/authentication
      - ./authentication/node_modules:/authentication/node_modules
    environment:
      NODE_ENV: development
    depends_on:
      - mongo_db
    links:
      - mongo_db
    ports:
      - "2000:2000"

  donations_server:
    container_name: NGO_DONATIONS
    build: "./donations"
    volumes:
      - ./donations:/donations
      - ./donations/node_modules:/donations/node_modules
    environment:
      NODE_ENV: development
    depends_on:
      - mongo_db
    links:
      - mongo_db
    ports:
      - "3000:3000"

  employees_server:
    container_name: NGO_EMPLOYEES
    build: "./employees"
    volumes:
      - ./employees:/employees
      - ./employees/node_modules:/employees/node_modules
    environment:
      NODE_ENV: development
    depends_on:
      - postgres_db
    links:
      - postgres_db
    ports:
      - "4000:4000"

  volunteers_server:
    container_name: NGO_VOLUNTEERS
    build: "./volunteers"
    volumes:
      - ./volunteers:/volunteers
      - ./volunteers/node_modules:/volunteers/node_modules
    environment:
      NODE_ENV: development
    depends_on:
      - postgres_db
    links:
      - postgres_db
    ports:
      - "5000:5000"

  projects_server:
    container_name: NGO_PROJECTS
    build: "./projects"
    volumes:
      - ./projects:/projects
      - ./projects/node_modules:/projects/node_modules
    environment:
      NODE_ENV: development
    depends_on:
      - postgres_db
    links:
      - postgres_db
    ports:
      - "6010:6010"

  financial_control_server:
    container_name: NGO_FINANCIAL_CONTROL
    build: "./financial-control"
    volumes:
      - ./financial-control:/financial-control
      - ./financial-control/node_modules:/financial-control/node_modules
    environment:
      NODE_ENV: development
    depends_on:
      - postgres_db
    links:
      - postgres_db
    ports:
      - "7000:7000"

  marketing_server:
    container_name: NGO_MARKETING
    build: "./marketing"
    volumes:
      - ./marketing:/marketing
      - ./marketing/node_modules:/marketing/node_modules
    environment:
      NODE_ENV: development
    depends_on:
      - postgres_db
    links:
      - postgres_db
    ports:
      - "8000:8000"

  reports_server:
    container_name: NGO_REPORTS
    build: "./reports"
    volumes:
      - ./reports:/reports
      - ./reports/node_modules:/reports/node_modules
    environment:
      NODE_ENV: development
    depends_on:
      - mongo_db
    links:
      - mongo_db
    ports:
      - "9000:9000"

  invoices_server:
    container_name: NGO_INVOICES
    build: "./invoices"
    volumes:
      - ./invoices:/invoices
      - ./invoices/node_modules:/invoices/node_modules
    environment:
      NODE_ENV: development
    depends_on:
      - mongo_db
    links:
      - mongo_db
    ports:
      - "10000:10000"

  settings_server:
    container_name: NGO_SETTINGS
    build: "./settings"
    volumes:
      - ./settings:/settings
      - ./settings/node_modules:/settings/node_modules
    environment:
      NODE_ENV: development
    depends_on:
      - mongo_db
    links:
      - mongo_db
    ports:
      - "11000:11000"

  admin_front:
    container_name: NGO_ADMIN_FRONT
    build: "./admin-front"
    stdin_open: true
    volumes:
      - "./admin-front:/admin-front"
      - "./admin-front/node_modules:/admin-front/node_modules"
    environment:
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: "true"
    ports:
      - "12000:12000"

  user_front:
    container_name: NGO_USER_FRONT
    build: "./user-front"
    stdin_open: true
    volumes:
      - "./user-front:/user-front"
      - "./user-front/node_modules:/user-front/node_modules"
    environment:
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: "true"
    ports:
      - "13000:13000"

  mongo_db:
    image: "mongo"
    container_name: NGO_MONGODB
    ports:
      - "27017:27017"
    volumes:
      - ./data/db:/data/db

  postgres_db:
    image: "postgres"
    container_name: NGO_POSTGRES
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_MULTIPLE_DATABASES: employees, employees_test,
        volunteers, volunteers_test,
        projects, projects_test,
        financial_control, financial_control_test,
        marketing, marketing_test
    volumes:
      - ./pgdata:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
